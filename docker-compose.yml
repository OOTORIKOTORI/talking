# Development infrastructure for Talking
# Services: Postgres (DB), Redis (Cache), Meilisearch (Search), MinIO (S3), MailHog (Mail)

services:
  postgres:
    image: postgres:16-alpine
    container_name: talking-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: talking
      POSTGRES_PASSWORD: talking
      POSTGRES_DB: talking
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U talking"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: talking-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  meilisearch:
    image: getmeili/meilisearch:v1.7
    container_name: talking-meilisearch
    ports:
      - "7700:7700"
    environment:
      MEILI_MASTER_KEY: masterKey123
      MEILI_ENV: development
    volumes:
      - meilisearch-data:/meili_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    container_name: talking-minio
    ports:
      - "9000:9000"  # S3 API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    container_name: talking-mailhog
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web UI
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
  meilisearch-data:
  minio-data:
