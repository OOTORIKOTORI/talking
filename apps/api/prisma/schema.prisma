// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AssetPrimaryTag {
  IMAGE_BG
  IMAGE_CG
  IMAGE_OTHER
  AUDIO_BGM
  AUDIO_SE
  AUDIO_VOICE
  AUDIO_OTHER
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@map("users")
}

model Asset {
  id          String          @id @default(cuid())
  key         String          @unique
  title       String?
  description String?
  tags        String[]        @default([])
  primaryTag  AssetPrimaryTag @default(IMAGE_OTHER)
  contentType String
  size        Int
  url         String
  ownerId     String?
  thumbKey    String?
  thumbWidth  Int?            @default(512)
  thumbHeight Int?            @default(512)
  createdAt   DateTime        @default(now())

  favorites   Favorite[]

  @@index([createdAt])
  @@index([ownerId])
  @@map("assets")
}

model Favorite {
  id        String   @id @default(cuid())
  userId    String
  assetId   String
  createdAt DateTime @default(now())

  asset     Asset    @relation(fields: [assetId], references: [id])

  @@unique([userId, assetId])
  @@index([userId, createdAt])
}

// === Characters =====================================
enum CharacterEmotion {
  NEUTRAL
  HAPPY
  SAD
  ANGRY
  SURPRISED
  FEAR
  DISGUST
  SHY
  SLEEPY
  THINKING
  OTHER
}

model Character {
  id          String   @id @default(cuid())
  ownerId     String
  name        String
  displayName String
  description String?
  isPublic    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime?
  tags        String[] @default([])

  images      CharacterImage[]

  @@index([ownerId, createdAt])
  @@map("characters")
}

model CharacterImage {
  id           String            @id @default(cuid())
  characterId  String
  key          String            // S3 object key
  thumbKey     String?           // Optional thumbnail key
  width        Int?
  height       Int?
  contentType  String
  size         Int?
  emotion      CharacterEmotion  @default(NEUTRAL)
  emotionLabel String?           // 任意の表示用ラベル（例: 楽しい/通常）
  pattern      String?           // ポーズ/服装などのバリエーション名
  sortOrder    Int               @default(0)
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt

  character    Character @relation(fields: [characterId], references: [id], onDelete: Cascade)

  @@index([characterId, sortOrder])
  @@map("character_images")
}
